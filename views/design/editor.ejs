<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>卧室设计编辑器 - 我的卧室</title>
  <link rel="stylesheet" href="/css/main.css">
  <link rel="stylesheet" href="/css/editor.css">
  <script type="importmap">
  {
    "imports": {
      "three": "https://unpkg.com/three@0.160.0/build/three.module.js"
    }
  }
  </script>
  <style>
    /* 调试面板样式 */
    /*
    #debug-panel {
      position: fixed;
      top: 70px;
      right: 10px;
      background: rgba(0,0,0,0.8);
      color: white;
      padding: 15px;
      border-radius: 5px;
      font-family: monospace;
      font-size: 12px;
      z-index: 9999;
      width: 300px;
      max-height: 400px;
      overflow-y: auto;
    }
    #debug-panel h3 {
      margin: 0 0 10px 0;
      color: #4cc9f0;
      font-size: 14px;
    }
    #debug-panel .section {
      margin-bottom: 10px;
      padding-bottom: 10px;
      border-bottom: 1px solid #555;
    }
    #debug-panel .item {
      display: flex;
      justify-content: space-between;
      margin-bottom: 5px;
    }
    #debug-panel .label {
      color: #e6ac00;
    }
    #debug-panel .value {
      color: #7DF9FF;
    }
    #debug-panel button {
      background: #4361ee;
      border: none;
      color: white;
      padding: 5px 8px;
      border-radius: 3px;
      cursor: pointer;
      margin-right: 5px;
      margin-bottom: 5px;
    }
    #debug-panel button:hover {
      background: #3a56d4;
    }
    */
  </style>
</head>
<body>
  <!-- 调试面板 -->
  <!--
  <div id="debug-panel">
    <h3>Three.js 调试面板</h3>
    <div class="section">
      <div class="item">
        <span class="label">渲染器状态:</span>
        <span class="value" id="debug-renderer-status">未初始化</span>
      </div>
      <div class="item">
        <span class="label">场景状态:</span>
        <span class="value" id="debug-scene-status">未初始化</span>
      </div>
      <div class="item">
        <span class="label">相机状态:</span>
        <span class="value" id="debug-camera-status">未初始化</span>
      </div>
    </div>
    <div class="section">
      <div class="item">
        <span class="label">画布尺寸:</span>
        <span class="value" id="debug-canvas-size">-</span>
      </div>
      <div class="item">
        <span class="label">渲染尺寸:</span>
        <span class="value" id="debug-renderer-size">-</span>
      </div>
      <div class="item">
        <span class="label">窗口尺寸:</span>
        <span class="value" id="debug-window-size">-</span>
      </div>
    </div>
    <div class="section">
      <div class="item">
        <span class="label">场景对象数:</span>
        <span class="value" id="debug-scene-objects">-</span>
      </div>
      <div class="item">
        <span class="label">帧率:</span>
        <span class="value" id="debug-fps">-</span>
      </div>
    </div>
    <div class="actions">
      <button id="debug-resize">更新画布尺寸</button>
      <button id="debug-toggle-wireframe">线框模式</button>
      <button id="debug-toggle-grid">显示/隐藏网格</button>
      <button id="debug-toggle-axes">显示/隐藏轴</button>
    </div>
  </div>
  -->

  <div class="editor-container">
    <!-- 顶部工具栏 -->
    <div class="editor-toolbar">
      <div class="logo">我的卧室设计师</div>
      <div class="tools">
        <button id="save-design" title="保存设计"><svg width="24" height="24" viewBox="0 0 24 24"><path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline></svg></button>
        <button id="load-design" title="加载设计"><svg width="24" height="24" viewBox="0 0 24 24"><path d="M3 15v4c0 1.1.9 2 2 2h14a2 2 0 0 0 2-2v-4M17 8l-5-5-5 5M12 3v12"></path></svg></button>
        <div class="separator"></div>
        <button id="edit-room-size" title="修改房间尺寸"><svg width="24" height="24" viewBox="0 0 24 24"><path d="M21 14h-4a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h4M3 6h4a2 2 0 0 1 2 2v6a2 2 0 0 1-2 2H3M16 10H8"></path></svg></button>
        <div class="separator"></div>
        <button id="undo" title="撤销" disabled><svg width="24" height="24" viewBox="0 0 24 24"><path d="M3 10h10a5 5 0 0 1 5 5 5 5 0 0 1-5 5H8"></path><polyline points="3 10 9 4 3 10 9 16 3 10"></polyline></svg></button>
        <button id="redo" title="重做" disabled><svg width="24" height="24" viewBox="0 0 24 24"><path d="M21 10H11a5 5 0 0 0-5 5 5 5 0 0 0 5 5h5"></path><polyline points="21 10 15 4 21 10 15 16 21 10"></polyline></svg></button>
        <div class="separator"></div>
        <button id="move-mode" class="active" title="移动模式"><svg width="24" height="24" viewBox="0 0 24 24"><path d="M5 9l-3 3 3 3M9 5l3-3 3 3M15 19l-3 3-3-3M19 9l3 3-3 3M3 12h18M12 3v18"></path></svg></button>
        <button id="rotate-mode" title="旋转模式"><svg width="24" height="24" viewBox="0 0 24 24"><path d="M20.38 8.57l-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44z"></path><path d="M10.59 15.41a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83z"></path></svg></button>
        <button id="delete-mode" title="删除模式"><svg width="24" height="24" viewBox="0 0 24 24"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg></button>
        <div class="separator"></div>
        <button id="render" title="渲染效果图"><svg width="24" height="24" viewBox="0 0 24 24"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path></svg></button>
      </div>
      <div class="user-controls">
        <button id="help" title="帮助"><svg width="24" height="24" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line></svg></button>
        <button id="settings" title="设置"><svg width="24" height="24" viewBox="0 0 24 24"><circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path></svg></button>
      </div>
    </div>
    
    <!-- 主编辑区 -->
    <div class="editor-main">
      <!-- 侧边栏 (左侧) -->
      <div class="sidebar">
        <!-- 家具库 -->
        <div class="furniture-library">
          <h3>家具库</h3>
          <div class="search-bar">
            <input type="text" id="furniture-search" placeholder="搜索家具...">
            <button id="search-btn"><svg width="18" height="18" viewBox="0 0 24 24"><circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line></svg></button>
          </div>
          <div class="category-tabs">
            <div class="category-tab active" data-category="all">全部</div>
            <div class="category-tab" data-category="bed">床</div>
            <div class="category-tab" data-category="cabinet">柜子</div>
            <div class="category-tab" data-category="table">桌子</div>
            <div class="category-tab" data-category="chair">椅子</div>
            <div class="category-tab" data-category="lamp">灯具</div>
            <div class="category-tab" data-category="decoration">装饰</div>
          </div>
          <div id="furniture-list" class="furniture-list">
            <!-- 家具列表将通过JavaScript动态填充 -->
            <div class="loading">加载中...</div>
          </div>
        </div>
      </div>
      
      <!-- 画布容器 -->
      <div class="canvas-container">
        <canvas id="design-canvas"></canvas>
        <!-- 画布测试标记 -->
        <!--
        <div style="position: absolute; top: 10px; left: 10px; background: rgba(255,255,255,0.7); padding: 5px; border-radius: 3px; pointer-events: none;">
          画布测试区域
        </div>
        -->
      </div>
      
      <!-- 属性面板 (右侧) -->
      <div id="property-panel" class="property-panel">
        <div class="panel-header">
          <h3>属性设置</h3>
        </div>
        <div class="panel-content">
          <div class="property-name">
            <h4>选中对象</h4>
            <div id="selected-name" class="value">未选中</div>
          </div>
          <div class="property-group">
            <h4>位置</h4>
            <div class="property-row">
              <label>X:</label>
              <input type="number" id="position-x" step="0.1">
            </div>
            <div class="property-row">
              <label>Y:</label>
              <input type="number" id="position-y" step="0.1">
            </div>
            <div class="property-row">
              <label>Z:</label>
              <input type="number" id="position-z" step="0.1">
            </div>
          </div>
          <div class="property-group">
            <h4>旋转 (度)</h4>
            <div class="property-row">
              <label>X:</label>
              <input type="number" id="rotation-x">
            </div>
            <div class="property-row">
              <label>Y:</label>
              <input type="number" id="rotation-y">
            </div>
            <div class="property-row">
              <label>Z:</label>
              <input type="number" id="rotation-z">
            </div>
          </div>
          <div class="property-group">
            <h4>缩放</h4>
            <div class="property-row">
              <label>X:</label>
              <input type="number" id="scale-x" step="0.1" min="0.1">
            </div>
            <div class="property-row">
              <label>Y:</label>
              <input type="number" id="scale-y" step="0.1" min="0.1">
            </div>
            <div class="property-row">
              <label>Z:</label>
              <input type="number" id="scale-z" step="0.1" min="0.1">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 保存设计弹窗 -->
  <div id="save-modal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>保存设计</h2>
        <button class="close-modal"><svg width="18" height="18" viewBox="0 0 24 24"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="design-name">设计名称</label>
          <input type="text" id="design-name" placeholder="输入设计名称">
        </div>
        <div class="form-group">
          <label for="design-description">描述 (可选)</label>
          <textarea id="design-description" placeholder="输入设计描述"></textarea>
        </div>
        <div class="form-actions">
          <button id="cancel-save" class="btn-secondary">取消</button>
          <button id="confirm-save" class="btn-primary">保存</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 卧室尺寸设置模态框 -->
  <div id="room-size-modal" class="modal">
    <div class="modal-content">
      <h2>设置卧室尺寸</h2>
      <p class="modal-description">调整卧室的长度、宽度、高度及形状，修改后系统将重新生成卧室空间。</p>
      <div class="form-group">
        <label for="room-length">长度 (米)</label>
        <input type="number" id="room-length" min="2" max="10" step="0.1" value="4">
      </div>
      <div class="form-group">
        <label for="room-width">宽度 (米)</label>
        <input type="number" id="room-width" min="2" max="10" step="0.1" value="3">
      </div>
      <div class="form-group">
        <label for="room-height">高度 (米)</label>
        <input type="number" id="room-height" min="2" max="5" step="0.1" value="2.8">
      </div>
      <div class="form-group">
        <label for="room-shape">形状</label>
        <select id="room-shape">
          <option value="rectangle">标准矩形</option>
          <option value="l-shape">L形</option>
        </select>
      </div>
      <div class="modal-actions">
        <button class="btn" id="cancel-room-size">取消</button>
        <button class="btn btn-primary" id="confirm-room-size">确认</button>
      </div>
    </div>
  </div>
  
  <!-- 加载设计弹窗 -->
  <div id="load-modal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>加载设计</h2>
        <button class="close-modal"><svg width="18" height="18" viewBox="0 0 24 24"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg></button>
      </div>
      <div class="modal-body">
        <div class="saved-designs">
          <!-- 保存的设计列表将通过JavaScript动态填充 -->
          <div class="loading">加载中...</div>
        </div>
        <div class="form-actions">
          <button id="cancel-load" class="btn-secondary">取消</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 渲染设置弹窗 -->
  <div id="render-modal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>渲染设置</h2>
        <button class="close-modal"><svg width="18" height="18" viewBox="0 0 24 24"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg></button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="render-quality">渲染质量</label>
          <select id="render-quality">
            <option value="low">低 (快速渲染)</option>
            <option value="medium" selected>中等</option>
            <option value="high">高 (更多细节)</option>
          </select>
        </div>
        <div class="form-group">
          <label for="render-size">输出大小</label>
          <select id="render-size">
            <option value="1280x720">HD (1280x720)</option>
            <option value="1920x1080" selected>Full HD (1920x1080)</option>
            <option value="3840x2160">4K (3840x2160)</option>
          </select>
        </div>
        <div class="form-actions">
          <button id="cancel-render" class="btn-secondary">取消</button>
          <button id="start-render" class="btn-primary">开始渲染</button>
        </div>
      </div>
    </div>
  </div>
  
  <!-- 帮助弹窗 -->
  <div id="help-modal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <h2>使用帮助</h2>
        <button class="close-modal"><svg width="18" height="18" viewBox="0 0 24 24"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg></button>
      </div>
      <div class="modal-body">
        <h3>快速入门</h3>
        <ol>
          <li>从左侧家具库中选择家具点击添加到场景</li>
          <li>使用工具栏中的移动、旋转工具调整家具位置</li>
          <li>点击家具可以在左侧面板中精确调整属性</li>
          <li>完成设计后点击"保存设计"按钮保存</li>
        </ol>
        <h3>快捷键</h3>
        <ul>
          <li><kbd>Ctrl+Z</kbd> - 撤销</li>
          <li><kbd>Ctrl+Y</kbd> - 重做</li>
          <li><kbd>Del</kbd> - 删除选中的家具</li>
          <li><kbd>鼠标拖动</kbd> - 旋转视角</li>
          <li><kbd>鼠标滚轮</kbd> - 缩放视图</li>
        </ul>
      </div>
    </div>
  </div>
  
  <!-- 加载动画 -->
  <div class="loading-overlay">
    <div class="spinner"></div>
    <div class="loading-text">加载中...</div>
  </div>
  
  <!-- 脚本 -->
  <script type="module" src="/js/editor.js"></script>
  
  <!-- 调试脚本 -->
  <script>
    /*
    document.addEventListener('DOMContentLoaded', function() {
      // 设置初始调试面板状态
      updateDebugInfo();
      
      // 定期更新调试信息
      setInterval(updateDebugInfo, 1000);
      
      // 调试按钮事件
      document.getElementById('debug-resize').addEventListener('click', function() {
        if (window.renderer && window.camera) {
          const container = document.querySelector('.canvas-container');
          window.renderer.setSize(container.clientWidth, container.clientHeight);
          window.camera.aspect = container.clientWidth / container.clientHeight;
          window.camera.updateProjectionMatrix();
          console.log('已手动更新画布尺寸', container.clientWidth, container.clientHeight);
        }
      });
      
      document.getElementById('debug-toggle-wireframe').addEventListener('click', toggleWireframe);
      document.getElementById('debug-toggle-grid').addEventListener('click', toggleGrid);
      document.getElementById('debug-toggle-axes').addEventListener('click', toggleAxes);
    });
    
    // 更新调试信息
    function updateDebugInfo() {
      // 窗口尺寸
      document.getElementById('debug-window-size').textContent = 
        window.innerWidth + 'x' + window.innerHeight;
      
      // 画布尺寸
      const canvas = document.getElementById('design-canvas');
      if (canvas) {
        document.getElementById('debug-canvas-size').textContent = 
          canvas.width + 'x' + canvas.height + ' (' + 
          canvas.clientWidth + 'x' + canvas.clientHeight + ')';
      }
      
      // Three.js状态
      if (window.renderer) {
        document.getElementById('debug-renderer-status').textContent = '已初始化';
        const size = window.renderer.getSize(new THREE.Vector2());
        document.getElementById('debug-renderer-size').textContent = 
          size.x + 'x' + size.y;
      }
      
      if (window.scene) {
        document.getElementById('debug-scene-status').textContent = '已初始化';
        document.getElementById('debug-scene-objects').textContent = 
          window.scene.children.length;
      }
      
      if (window.camera) {
        document.getElementById('debug-camera-status').textContent = '已初始化';
      }
    }
    
    // 切换线框模式
    function toggleWireframe() {
      if (!window.scene) return;
      
      let hasWireframe = false;
      window.scene.traverse(function(object) {
        if (object.isMesh) {
          if (object.material) {
            object.material.wireframe = !object.material.wireframe;
            hasWireframe = object.material.wireframe;
          }
        }
      });
      
      console.log('线框模式:', hasWireframe ? '开启' : '关闭');
    }
    
    // 切换网格显示
    function toggleGrid() {
      if (!window.scene) return;
      
      const grid = window.scene.children.find(obj => obj.isGridHelper);
      if (grid) {
        grid.visible = !grid.visible;
        console.log('网格显示:', grid.visible ? '开启' : '关闭');
      }
    }
    
    // 切换坐标轴显示
    let axesHelper = null;
    function toggleAxes() {
      if (!window.scene) return;
      
      if (axesHelper) {
        axesHelper.visible = !axesHelper.visible;
        console.log('坐标轴显示:', axesHelper.visible ? '开启' : '关闭');
      } else {
        // 创建坐标轴
        axesHelper = new THREE.AxesHelper(5);
        window.scene.add(axesHelper);
        console.log('已添加坐标轴');
      }
    }
    */
  </script>
</body>
</html> 